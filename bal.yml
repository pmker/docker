version: '3'
services:
  #  caddy:
  #    image: "abiosoft/caddy:latest"
  #    cap_add:
  #      - NET_BIND_SERVICE
  #    volumes:
  #      - ./docker/caddy/certs:/root/certs # to sync mkcert certificates to Caddy
  #      - ./docker/caddy/Caddyfile:/etc/Caddyfile  # to mount custom Caddyfile
  #    ports:
  #      - "443:443"
  #      - "80:80"
  #    depends_on:
  #      - parse

  parse:
    build: "./parse"
    container_name: hash-parse
    restart: "always"
    ports:
      - 1337:1337
    env_file:
      - ./parse/.env
    depends_on:
      - redis
      - postgres
      - nats


  postgres:
    #image: koinotice/postgres:latest
    build: "./docker/postgres"
    container_name: hash-postgres
    restart: "always"
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: "pmker"
      POSTGRES_USER: "pmker"
      POSTGRES_PASSWORD: "Zheli123"
#    volumes:
#      - ./data/postgresql:/var/lib/postgresql/data

  nats:
    image: nats-streaming:latest
    restart: always
    container_name: hash_nats
    command: -m 8222 --store SQL --sql_driver postgres --sql_source "postgres://pmker:Zheli123@postgres/pmker?sslmode=disable"
    ports:
      - "4222:4222"
      - "8222:8222"

  mongo:
    image: mongo
    restart: always
    container_name: hash-mongo
    volumes:
      - /hash/data/mongo/data:/data/db
    ports:
      - 27017:27017

  redis:
    image: redis
    restart: always
    container_name: hash-redis
    volumes:
      - ./docker/data/Shanghai:/etc/localtime
      - /hash/data/redis/data:/data
    ports:
      - 6379:6379

  gitea:
    image: "gitea/gitea:latest"

    volumes:
      - ~/gitea-demo:/data  # to mount custom Caddyfile
    ports:
      - "10080:3000"
      - "10022:22"

  elasticsearch:
    build:
      context: ./docker/elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    ulimits:
      nofile: 65536
    volumes:
      - ./docker/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - elasticsearch
      - http.port=9200
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization
      - http.cors.allow-credentials=true
    networks:
      - keven

#  logstash:
#    build:
#      context: ./docker/logstash/
#      args:
#        ELK_VERSION: $ELK_VERSION
#    volumes:
#      - ./docker/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
#      - ./docker/logstash/pipeline:/usr/share/logstash/pipeline:ro
#    ports:
#      - "7100:5000"
#      - "9600:9600"
#    environment:
#      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
#    networks:
#      - keven
#    depends_on:
#      - elasticsearch
#
#  kibana:
#    build:
#      context: ./docker/kibana/
#      args:
#        ELK_VERSION: $ELK_VERSION
#    volumes:
#      - ./docker/kibana/config/:/usr/share/kibana/config:ro
#    environment:
#      SERVER_NAME: localhost
#      ELASTICSEARCH_URL: http://elasticsearch:9200/
#    ports:
#      - "5601:5601"
#    networks:
#      - keven
#    depends_on:
#      - elasticsearch
#
#  graphql-engine:
#    image: hasura/graphql-engine:v1.0.0-alpha44
#    ports:
#      - "7410:8080"
#    depends_on:
#      - "postgres"
#    restart: always
#    environment:
#      HASURA_GRAPHQL_DATABASE_URL: postgres://pmker:Zheli123@postgres:5432/pmker
#      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
#      ## uncomment next line to set an admin secret
#      HASURA_GRAPHQL_ADMIN_SECRET: Zheli123

networks:
  keven:
    driver: bridge
    ipam:
      config:
        - subnet: 172.3.0.0/24


